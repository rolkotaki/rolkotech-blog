services:
  db:
    image: postgres:17
    container_name: rolkotech-postgres
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB?POSTGRES_DB variable not set}
      POSTGRES_USER: ${POSTGRES_USER?POSTGRES_USER variable not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?POSTGRES_PASSWORD variable not set}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 5

  prestart:
    image: '${DOCKER_IMAGE_BACKEND?DOCKER_IMAGE_BACKEND variable not set}:${TAG-latest}'
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: rolkotech-backend-prestart
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: db
    depends_on:
      db:
        condition: service_healthy
    command: ["bash", "backend/scripts/prestart.sh"]

  backend:
    image: '${DOCKER_IMAGE_BACKEND?DOCKER_IMAGE_BACKEND variable not set}:${TAG-latest}'
    container_name: rolkotech-backend
    volumes:
      - ./docker/coverage:/rolkotech-blog/backend/coverage
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: db
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 10s
      start_period: 5s
      retries: 5
